//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarrerLib
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CareerEntities : DbContext
    {
        public CareerEntities()
            : base("name=CareerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Job_Seeker> Job_Seeker { get; set; }
        public virtual DbSet<Jobs_Posted> Jobs_Posted { get; set; }
        public virtual DbSet<JobSeeker_Professional> JobSeeker_Professional { get; set; }
        public virtual DbSet<JobsApplied> JobsApplieds { get; set; }
    
        public virtual int addJobsApplied(string jsName, Nullable<int> jobId, Nullable<System.DateTime> dateApply, Nullable<int> cid)
        {
            var jsNameParameter = jsName != null ?
                new ObjectParameter("jsName", jsName) :
                new ObjectParameter("jsName", typeof(string));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(int));
    
            var dateApplyParameter = dateApply.HasValue ?
                new ObjectParameter("dateApply", dateApply) :
                new ObjectParameter("dateApply", typeof(System.DateTime));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addJobsApplied", jsNameParameter, jobIdParameter, dateApplyParameter, cidParameter);
        }
    
        [DbFunction("CareerEntities", "searchByIndustry")]
        public virtual IQueryable<searchByIndustry_Result> searchByIndustry(string industryName)
        {
            var industryNameParameter = industryName != null ?
                new ObjectParameter("industryName", industryName) :
                new ObjectParameter("industryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<searchByIndustry_Result>("[CareerEntities].[searchByIndustry](@industryName)", industryNameParameter);
        }
    
        [DbFunction("CareerEntities", "searchByKeySkills")]
        public virtual IQueryable<searchByKeySkills_Result> searchByKeySkills(string keySkills)
        {
            var keySkillsParameter = keySkills != null ?
                new ObjectParameter("keySkills", keySkills) :
                new ObjectParameter("keySkills", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<searchByKeySkills_Result>("[CareerEntities].[searchByKeySkills](@keySkills)", keySkillsParameter);
        }
    
        public virtual int findkeyskills(string name, ObjectParameter keyskills)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("findkeyskills", nameParameter, keyskills);
        }
    
        [DbFunction("CareerEntities", "seeAppliedJobs")]
        public virtual IQueryable<seeAppliedJobs_Result> seeAppliedJobs(string jsName)
        {
            var jsNameParameter = jsName != null ?
                new ObjectParameter("jsName", jsName) :
                new ObjectParameter("jsName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<seeAppliedJobs_Result>("[CareerEntities].[seeAppliedJobs](@jsName)", jsNameParameter);
        }
    
        [DbFunction("CareerEntities", "seePostedJobs")]
        public virtual IQueryable<seePostedJobs_Result> seePostedJobs(Nullable<int> compId)
        {
            var compIdParameter = compId.HasValue ?
                new ObjectParameter("compId", compId) :
                new ObjectParameter("compId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<seePostedJobs_Result>("[CareerEntities].[seePostedJobs](@compId)", compIdParameter);
        }
    
        [DbFunction("CareerEntities", "Applyjsdetails")]
        public virtual IQueryable<Applyjsdetails_Result> Applyjsdetails(Nullable<int> cmpid)
        {
            var cmpidParameter = cmpid.HasValue ?
                new ObjectParameter("cmpid", cmpid) :
                new ObjectParameter("cmpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Applyjsdetails_Result>("[CareerEntities].[Applyjsdetails](@cmpid)", cmpidParameter);
        }
    }
}
